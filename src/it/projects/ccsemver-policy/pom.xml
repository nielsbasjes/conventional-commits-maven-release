<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Conventional Commits Version Policy
  ~ Copyright (C) 2022-2023 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.maven.plugin.release.it</groupId>
  <artifactId>ccsemver-policy</artifactId>
  <version>1.0-SNAPSHOT</version>
  <scm>
    <connection>scm:dummytags|nul</connection>
    <developerConnection>scm:dummytags|nul</developerConnection>
  </scm>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>@maven-release-plugin.version@</version>
        <configuration>
          <allowReleasePluginSnapshot>true</allowReleasePluginSnapshot>
          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
          <pushChanges>false</pushChanges>
          <remoteTagging>false</remoteTagging>

          <scmCommentPrefix>ci(Release): </scmCommentPrefix>
          <scmReleaseCommitComment>ci(Release): Version @{releaseLabel}</scmReleaseCommitComment>
          <tagNameFormat>v@{project.version}</tagNameFormat>

          <projectVersionPolicyId>CCSemVerVersionPolicy</projectVersionPolicyId>

          <!-- projectVersionPolicyConfig for the CCSemVerVersionPolicy is an XML structure:  -->
          <!-- versionTag: A regex with 1 capture group that MUST extract the project.version from the SCM tag. -->
          <!-- minorRules: A list regexes that will be matched against all lines in each commit message since   -->
          <!--             the last tag. If matched the next version is at least a MINOR update.                -->
          <!-- majorRules: A list regexes that will be matched against all lines in each commit message since   -->
          <!--             the last tag. If matched the next version is at least a MAJOR update.                -->
          <!-- If a match is found the commit will trigger either a minor or major version increase             -->
          <!-- instead of only a patch increase.  -->
          <projectVersionPolicyConfig>
            <versionTag>^v([0-9]+(?:\.[0-9]+(?:\.[0-9]+)?)?)$</versionTag>
            <majorRules>
              <majorRule>^[a-zA-Z]+!(?:\([a-zA-Z0-9_-]+\))?: .*$</majorRule>
              <majorRule>^BREAKING CHANGE:.*$</majorRule>
            </majorRules>
            <minorRules>
              <minorRule>^feat(?:\([a-zA-Z0-9_-]+\))?: .*$</minorRule>
            </minorRules>
          </projectVersionPolicyConfig>

        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.its.release</groupId>
            <artifactId>maven-scm-provider-dummy</artifactId>
            <version>1.0</version>
          </dependency>

          <dependency>
            <groupId>nl.basjes.maven.release</groupId>
            <artifactId>conventional-commits-version-policy</artifactId>
            <version>@project.version@</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
